% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/INTRA_FORECAST_add_all_multivariate_forecast_models.R
\name{add_all_multivariate_forecast_models}
\alias{add_all_multivariate_forecast_models}
\title{Add all multivariate forecast models}
\usage{
add_all_multivariate_forecast_models(
  ts_object_train,
  ts_object_valid,
  fc_models = list(),
  periods_ahead = 1,
  periods_history = Inf,
  fc_methods = supported_fc_methods_multi_var(),
  keep_fc_model_objects = FALSE,
  verbose = FALSE,
  parallel = FALSE
)
}
\arguments{
\item{ts_object_train}{A time series object, which contains only the training
data.}

\item{ts_object_valid}{A time series object, which contains the validation
data. This is used for multivariate frameworks, thus it should have the
forecasted/actual values of the external regressors as well.}

\item{fc_models}{A named list of forecast models, with for each forecast
model a list with the model itself and a table with forecast values.}

\item{periods_ahead}{A positive integer value indicating the number of
periods to forecast ahead.}

\item{periods_history}{A positive integer value indicating the number of
historic datapoints to use for training, which is only relevant for
specific forecast methods such as drift and mean.}

\item{fc_methods}{A character vector specifying the forecast methods to add. 
For more info \code{`?supported_fc_methods`}.}

\item{keep_fc_model_objects}{Boolean, which is set to TRUE in order to keep
original fc_model objects in the main_forecasting_table after running the
forecast. This is needed for scenario analysis in multivariate forecasting.
However, it may lead to memory issues, as the main_forecasting_table
increases in size.}

\item{verbose}{Boolean, which is set to TRUE if status updates are valued, or
set to FALSE if they are not.}
}
\value{
A named list of forecast models, with for each forecast model a list
  with the model itself and a table with forecast values.
}
\description{
\code{add_all_multivariate_forecast_models} is a wrapper function to add
multiple multivariate forecast models to a (named) list of forecast models.
The forecast models are created based on multiple calls of the
add-forecasting-model functions in the tsforecast package. The fc_methods
parameter can be used to control which forecast models are added.
}
\examples{
ts_object_train <- tstools::initialize_ts_forecast_data(
      data = dummy_gasprice,
      date_col = "year_month",
      col_of_interest = "gasprice",
      group_cols = c("state", "oil_company"),
      xreg_cols = c("spotprice", "gemprice")
   ) \%>\%
   dplyr::filter(grouping == "state = New York   &   oil_company = CompanyA") \%>\%
   dplyr::slice(1:179) \%>\%
   tstools::transform_data_to_ts_object()
ts_object_valid <- tstools::initialize_ts_forecast_data(
     data = dummy_gasprice,
     date_col = "year_month",
     col_of_interest = "gasprice",
     group_cols = c("state", "oil_company"),
     xreg_cols = c("spotprice", "gemprice")
   ) \%>\%
   dplyr::filter(grouping == "state = New York   &   oil_company = CompanyA") \%>\%
   dplyr::slice(180:191) \%>\%
   tstools::transform_data_to_ts_object()
res <- add_all_multivariate_forecast_models(
   ts_object_train = ts_object_train,
   ts_object_valid = ts_object_valid,
   periods_ahead = 12,
   verbose = T
)
}
