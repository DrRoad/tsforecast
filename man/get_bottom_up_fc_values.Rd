% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HELPER_get_bottom_up_fc_values.R
\name{get_bottom_up_fc_values}
\alias{get_bottom_up_fc_values}
\title{Calculate bottom up hierarchical forecast values}
\usage{
get_bottom_up_fc_values(main_forecasting_table, best_model_per_group)
}
\arguments{
\item{main_forecasting_table}{A tibble object that contains run forecasts for
one split date and all groups. It is assumed that this is the output of the
\code{add_fc_models_to_main_forecasting_table} or
\code{update_main_forecasting_table} function.}

\item{best_model_per_group}{A tibble that containts the best fc_model for
each group. It is assumed that this tibble is created using the
\code{get_forecast_accuracy_overview} and \code{get_best_forecast_methods}
functions (see example).}
}
\value{
A tibble with the consistent hierarchical forecast value for all
  groups in all forecast dates, at the specified forecast split date
}
\description{
\code{get_bottom_up_fc_values} is a function that calculates the bottom up
hierarchical forecasting values, based on already calculated forecasts.
}
\examples{
main_forecasting_table <- dummy_hierarchical_gasprice \%>\%
   dplyr::filter(oil_company == "CompanyB") \%>\%
   tstools::initialize_ts_forecast_data(
      date_col = "year_month",
      col_of_interest = "gasprice",
      group_cols = c("currency", "oil_company"),
      hierarchical_col = "location"
   ) \%>\%
   dplyr::filter(period >= as.Date("2004-06-30")) \%>\%
   create_main_forecasting_table() \%>\%
   dplyr::filter(ts_split_date == 200605) \%>\%
   add_fc_models_to_main_forecasting_table(
      fc_methods = c("basic", "linear")
   )
best_model_per_group <- main_forecasting_table \%>\%
   get_forecast_accuracy_overview() \%>\%
   get_best_forecast_methods()
get_bottom_up_fc_values(
   main_forecasting_table = main_forecasting_table,
   best_model_per_group = best_model_per_group
)
}
