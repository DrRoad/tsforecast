% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/POST_FORECAST_get_fitted_forecast_values.R
\name{get_fitted_forecast_values}
\alias{get_fitted_forecast_values}
\title{Get fitted values of the "forecast" forecast models, post forecast}
\usage{
get_fitted_forecast_values(main_forecasting_table, main_fit_table, xreg = "")
}
\arguments{
\item{main_forecasting_table}{A tibble containing a single row per group and
several columns of data required for time series forecasting, which has
been created using the \code{create_main_forecasting_table} function and
which has been extended with the fc_models and fc_errors columns using the
\code{add_fc_models_to_main_forecasting_table} function. Note that this
table should have the output of a multivariate analysis.}

\item{main_fit_table}{A tibble containing information about the specific
fc_model and external regressor values to be used as inputs}

\item{xreg}{A character that contains a string with the name of the external
regressor to be plotted.}
}
\value{
A vector of fitted values
}
\description{
\code{get_fitted_forecast_values} is a function that creates fitted values
from the forecast models in the R package "forecast". The fitted values vary
with respect to one changing external regressor.
}
\examples{
main_forecasting_table <- tstools::initialize_ts_forecast_data(
      data = dummy_gasprice,
      date_col = "year_month",
      col_of_interest = "gasprice",
      group_cols = c("state", "oil_company"),
      xreg_cols = c("spotprice", "gemprice")
   ) \%>\%
   create_main_forecasting_table() \%>\%
   dplyr::filter(ts_split_date == 200503) \%>\%
   dplyr::filter(grouping == "state = New York   &   oil_company = CompanyA") \%>\%
   add_fc_models_to_main_forecasting_table(
      periods_ahead = 12,
      fc_methods = c("arima", "linear", "nn"),
      keep_fc_model_objects = T
   )
fc_models <- names(main_forecasting_table$fc_models[[1]])
main_fit_table <- tibble::tibble(
   xreg_value = vector(length = 100 * length(fc_models)),
   fitted = vector(length = 100 * length(fc_models)),
   fc_model = rep(fc_models, each = 100)
)
get_fitted_forecast_values(
   main_forecasting_table = main_forecasting_table,
   main_fit_table = main_fit_table,
   xreg = "spotprice"
)
}
