% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VISUALIZE_plot_hierarchical_forecasts.R
\name{plot_hierarchical_forecasts}
\alias{plot_hierarchical_forecasts}
\title{Create stacked plot of hierarchical forecasts}
\usage{
plot_hierarchical_forecasts(
  main_forecasting_table,
  fc_model = c("consistent", "bottom_up"),
  hierarchical_cols = "",
  grouping = "",
  demo_mode = FALSE
)
}
\arguments{
\item{main_forecasting_table}{A tibble containing a unique value for
ts_split_date but not for the grouping column. It is assumed that this
table is created using the \code{create_main_forecasting_table} function
and which has been extended with the fc_models and fc_errors columns using
the \code{add_fc_models_to_main_forecasting_table} and
\code{add_hierarchical_fc_models_to_main_forecasting_table} functions.}

\item{fc_model}{A string that can be either "consistent" for consistent
hierarchical forecast models or "bottom_up" for bottom-up hierarchical
forecast models.}

\item{hierarchical_cols}{A string indicating which grouping columns are the
hierarchical ones to be used in the plot.}

\item{grouping}{A string indicating which grouping is the top group of the
stacked plot.}

\item{demo_mode}{Boolean, which is to be set to TRUE if any potentially
sensitive figures should be hidden from the audience for demo purposes, or
set to FALSE if all figures can safely be displayed.}
}
\value{
A plotly object displaying a stacked plot, if the selected grouping
  is a hierarchical parent.
}
\description{
\code{plot_hierarchical_forecasts} is a function that creates a plot which
looks at how the forecasts of the chosen hierarchical group compares to it's
children, if applicable.
}
\examples{
dummy_hierarchical_gasprice \%>\%
      tstools::initialize_ts_forecast_data(
      date_col = "year_month",
      col_of_interest = "gasprice",
      group_cols = "currency",
      hierarchical_cols = c("location", "oil_company")
   ) \%>\%
   dplyr::filter(period >= as.Date("2004-11-30")) \%>\%
   create_main_forecasting_table() \%>\%
   add_fc_models_to_main_forecasting_table(
      fc_methods = c("basic", "linear")
   ) \%>\%
   add_hierarchical_fc_models_to_main_forecasting_table() \%>\%
   dplyr::filter(ts_split_date == 200611) \%>\%
   plot_hierarchical_forecasts(
      fc_model = "consistent",
      hierarchical_cols = "location",
      grouping = "location = USA   &   oil_company = CompanyC   &   currency = EUR"
   )
}
