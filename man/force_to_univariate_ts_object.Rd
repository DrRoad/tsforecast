% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HELPER_force_to_univariate_ts_object.R
\name{force_to_univariate_ts_object}
\alias{force_to_univariate_ts_object}
\title{Transform a time series object to be univariate}
\usage{
force_to_univariate_ts_object(ts_object)
}
\arguments{
\item{ts_object}{A time series object that can be univariate or multivariate.}
}
\value{
A univariate time series object.
}
\description{
\code{force_to_univariate_ts_object} is a function to transform a time series
object into a univariate time series object. This is needed to run i.a. the
linear forecasting functions, since they require a univariate time series
object as an input. The external regressors are dropped so that only the
column of interest remains in the resulting univariate time series object.
}
\examples{
ts_object <- tstools::initialize_ts_forecast_data(
      data = dummy_gasprice,
      date_col = "year_month",
      col_of_interest = "gasprice",
      group_cols = c("state", "oil_company"),
      xreg_cols = c("spotprice", "gemprice")
   ) \%>\%
   dplyr::filter(grouping == "state = New York   &   oil_company = CompanyA") \%>\%
   tstools::transform_data_to_ts_object(seasonal_periods = c(12,3))
force_to_univariate_ts_object(ts_object = ts_object)
}
